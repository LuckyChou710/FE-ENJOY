[{"C:\\Users\\Administrator\\Desktop\\learn\\FE-ENJOY\\learn-react\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\learn\\FE-ENJOY\\learn-react\\src\\advanced\\03_hook使用原则.jsx":"2","C:\\Users\\Administrator\\Desktop\\learn\\FE-ENJOY\\learn-react\\src\\demo\\ScrollTab\\index.js":"3","C:\\Users\\Administrator\\Desktop\\learn\\FE-ENJOY\\learn-react\\src\\base\\01_组件通信.js":"4"},{"size":1651,"mtime":1614043667070,"results":"5","hashOfConfig":"6"},{"size":2372,"mtime":1608003368636,"results":"7","hashOfConfig":"8"},{"size":860,"mtime":1612256077070,"results":"9","hashOfConfig":"6"},{"size":979,"mtime":1606355848147,"results":"10","hashOfConfig":"6"},{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b32mk1",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"16"},"1jaiv1z",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\learn\\FE-ENJOY\\learn-react\\src\\index.js",[],"C:\\Users\\Administrator\\Desktop\\learn\\FE-ENJOY\\learn-react\\src\\advanced\\03_hook使用原则.jsx",["22"],"// import React, { useState } from \"react\";\r\n// function PersonalInfoComponent() {\r\n//   // 集中定义变量\r\n//   let name, age, career, setName, setCareer;\r\n//   // 获取姓名状态\r\n//   [name, setName] = useState(\"修言\");\r\n//   // 获取年龄状态\r\n//   [age] = useState(\"99\");   \r\n//   // 获取职业状态\r\n//   [career, setCareer] = useState(\"我是一个前端，爱吃小熊饼干\");\r\n//   // 输出职业信息\r\n//   console.log(\"career\", career);\r\n//   // 编写 UI 逻辑\r\n//   return (\r\n//     <div className=\"personalInfo\">\r\n//       <p>姓名：{name}</p>\r\n//       <p>年龄：{age}</p>\r\n//       <p>职业：{career}</p>\r\n//       <button\r\n//         onClick={() => {\r\n//           setName(\"秀妍\");\r\n//         }}\r\n//       >\r\n//         修改姓名 \r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default PersonalInfoComponent;\r\n\r\nimport React, { useState } from \"react\";\r\n// isMounted 用于记录是否已挂载（是否是首次渲染）\r\nlet isMounted = false;\r\nfunction PersonalInfoComponent() {\r\n  // 定义变量的逻辑不变\r\n  let name, age, career, setName, setCareer;\r\n  // 这里追加对 isMounted 的输出，这是一个 debug 性质的操作\r\n  console.log(\"isMounted is\", isMounted);\r\n  // 这里追加 if 逻辑：只有在首次渲染（组件还未挂载）时，才获取 name、age 两个状态\r\n  if (!isMounted) {\r\n    // eslint-disable-next-line\r\n    [name, setName] = useState(\"修言\");\r\n    // eslint-disable-next-line\r\n    [age] = useState(\"99\");\r\n    // if 内部的逻辑执行一次后，就将 isMounted 置为 true（说明已挂载，后续都不再是首次渲染了）\r\n    isMounted = true;\r\n  }\r\n  // 对职业信息的获取逻辑不变\r\n  [career, setCareer] = useState(\"我是一个前端，爱吃小熊饼干\");\r\n  // 这里追加对 career 的输出，这也是一个 debug 性质的操作\r\n  console.log(\"career\", career);\r\n  // UI 逻辑的改动在于，name和age成了可选的展示项，若值为空，则不展示\r\n  return (\r\n    <div className=\"personalInfo\">\r\n      {name ? <p>姓名：{name}</p> : null}\r\n      {age ? <p>年龄：{age}</p> : null}\r\n      <p>职业：{career}</p>\r\n      <button\r\n        onClick={() => {\r\n          setName(\"秀妍\");\r\n        }}\r\n      >\r\n        修改姓名\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default PersonalInfoComponent;",["23","24"],"C:\\Users\\Administrator\\Desktop\\learn\\FE-ENJOY\\learn-react\\src\\demo\\ScrollTab\\index.js",["25"],"import React, { useState } from 'react';\r\nimport styled from './index.scss';\r\n\r\nexport default function ScrollTab() {\r\n  console.log(styled);\r\n  const [tabList] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\r\n\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  return (\r\n    <div className={styled.container}>\r\n      <span className={styled.toLeft}>&lt;</span>\r\n      <div className={styled.tab}>\r\n        {tabList.map((item, index) => {\r\n          return (\r\n            <span\r\n              key={index}\r\n              className={\r\n                activeIndex === index\r\n                  ? `${styled.tabItem} ${styled.active}`\r\n                  : styled.tabItem\r\n              }\r\n            >\r\n              {item}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      <span className={styled.toRight}>&gt;</span>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\learn\\FE-ENJOY\\learn-react\\src\\base\\01_组件通信.js",[],{"ruleId":"26","severity":1,"message":"27","line":49,"column":12,"nodeType":"28","messageId":"29","endLine":49,"endColumn":21},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"26","severity":1,"message":"34","line":8,"column":23,"nodeType":"28","messageId":"29","endLine":8,"endColumn":37},"no-unused-vars","'setCareer' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["35"],"no-negated-in-lhs",["36"],"'setActiveIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]